# -*- coding: utf-8 -*-
"""simpson

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QDuEoIEzi7dgC4MwNdrgYJa1xh2ssrXm

- indicar que o programa calcula a integral pelo metodo de simpson da funcao f no intervalo (a,b)
- pedir para inserir o valor de k desejado
- se k <= 0 : nao é possivel realizar
- senao:
- printar que vai ser escolhido os intervalo que deseja calcular a integral  
- pedir pra inserir o valor inicial do intervalo (a)
- pedir pra inserir o valor final do intervalor (b)
- definir a função da area da parábola simpson(a,b,k)
-    calcular o delta (b-a)/2**k
-    fazer a lista vazia de fi
-    realizar for i in range(1,2**k,2):  f = f(a+i*delta) fi.append(f)
-    fazer a lista vazia de fp
-    realizar for pi in range(2,2**k,2):  f = f(a+p*delta) fp.append(f)
-    retornar o Sk com o somatorio dos valores da lista de fi e fp
- printar que a integral de f(x) nos intervalos (a,b) calculada na ordem k é Sk
"""

import math as mt

print("esse programa deseja calcular a integral de sen(x) no intervalo [0,pi] usando o método de simpson")

k = int(input("Insira o valor de k desejado \n"))
if k<=0:
  print("não é possivel executaro programa com esse valor de k")

else:
  a = 0
  b = mt.pi

  def simpson(a,b,k):
    delta = (b - a)/2**k
    #calcular o somatorio das funções impares
    fi=[]
    for i in range(1,2**k,2):
      f_i = mt.sin(a + i*delta)
      fi.append(f_i)
    #calcular o somatorio das funções pares
    fp=[]
    for p in range(2,2**k-1,2):
      f_p = mt.sin(a + p*delta)
      fp.append(f_p)
    S = delta/3 * (mt.sin(a) + 4*sum(fi) + 2*sum(fp) + mt.sin(b))
    return S

  Sk = simpson(a,b,k)

  print("a integral de sen(x) nos intervalo [0,pi] calculada na ordem %.d é %.5f" %(k,Sk))