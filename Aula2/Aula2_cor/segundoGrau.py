'''
Viviane
Programa roda e fornece os resultados esperados para todas de raizes.
Obs 1: Poderia ter limitado as casas decimais na resposta da raiz para delta igual a 0.
Obs: Não se deve comparar uma variável float usando == pois os números no computador são aproximados. Deve-se usar if fabs(delta)<1.e-12  (ou qualquer numero muito pequeno)
'''

# -*- coding: utf-8 -*-
"""salvando

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QDuEoIEzi7dgC4MwNdrgYJa1xh2ssrXm
"""

# -*- coding: utf-8 -*-
from math import *

#este programa resolverá uma equação de segundo grau por bhaskara

a = float(input("insira um valor para o coeficiente a \n"))
if (a == 0):
  print ("não usamos bhaskara nessa situação")
  
else: 
  b = float(input("insira um valor para o coeficiente b \n"))
  c = float(input("insira um valor para o coeficiente c \n"))

  delta = b**2 - 4*a*c
  if (delta < 0):
    re = -b/(2*a) #parte real da solução
    im = sqrt(abs(delta))/(2*a) #parte imaginária
    print("A equação %.2f x**2 + %.2f x + %.2f possui: " %(a,b,c))
    print("duas raizes complexas ")
    print("%.2f +- %.2f i" %(re,im))
    
  
  elif (delta == 0):
    x = -b/(2*a)
    print("A equação %.2f x**2 + %.2f x + %.2f possui:" %(a,b,c))
    print("uma raiz real ")
    x = -b/(2*a)
    print(x)

  else: 
    x1 = (- b + sqrt(delta))/(2*a)
    x2 = (- b - sqrt(delta))/(2*a)
    print("A equação %.2f x**2 + %.2f x + %.2f possui:" %(a,b,c))
    print("duas raizes reais ")
    print("%.2f e %.2f" %(x1,x2))

print("Fim")
